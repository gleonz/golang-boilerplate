// Code generated by go-swagger; DO NOT EDIT.

package usuarios

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/gleonz/golang-boilerplate/internal/delivery/http/models"
)

// AgregarUsuarioCreatedCode is the HTTP code returned for type AgregarUsuarioCreated
const AgregarUsuarioCreatedCode int = 201

/*
AgregarUsuarioCreated Usuario creado exitosamente

swagger:response agregarUsuarioCreated
*/
type AgregarUsuarioCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Usuario `json:"body,omitempty"`
}

// NewAgregarUsuarioCreated creates AgregarUsuarioCreated with default headers values
func NewAgregarUsuarioCreated() *AgregarUsuarioCreated {

	return &AgregarUsuarioCreated{}
}

// WithPayload adds the payload to the agregar usuario created response
func (o *AgregarUsuarioCreated) WithPayload(payload *models.Usuario) *AgregarUsuarioCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the agregar usuario created response
func (o *AgregarUsuarioCreated) SetPayload(payload *models.Usuario) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AgregarUsuarioCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AgregarUsuarioBadRequestCode is the HTTP code returned for type AgregarUsuarioBadRequest
const AgregarUsuarioBadRequestCode int = 400

/*
AgregarUsuarioBadRequest Solicitud incorrecta debido a entrada inv√°lida

swagger:response agregarUsuarioBadRequest
*/
type AgregarUsuarioBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAgregarUsuarioBadRequest creates AgregarUsuarioBadRequest with default headers values
func NewAgregarUsuarioBadRequest() *AgregarUsuarioBadRequest {

	return &AgregarUsuarioBadRequest{}
}

// WithPayload adds the payload to the agregar usuario bad request response
func (o *AgregarUsuarioBadRequest) WithPayload(payload *models.Error) *AgregarUsuarioBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the agregar usuario bad request response
func (o *AgregarUsuarioBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AgregarUsuarioBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
